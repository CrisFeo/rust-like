#!/usr/bin/env bash
set -Eeuo pipefail

CONTAINER_NAME=rust-like-devenv
ADDITIONAL_DOCKER_ARGS=""

if [ "${1-}" = '--rebuild' ]; then
  echo "$CONTAINER_NAME rebuild requested, deleting existing container..."
  docker rm "$CONTAINER_NAME" 1> /dev/null 2>&1 || :
fi

STATUS="$(docker inspect -f '{{.State.Status}}' "$CONTAINER_NAME" 2> /dev/null || :)"
if [ "$STATUS" = 'running' ]; then
  echo "$CONTAINER_NAME running, connecting to container..."
  docker exec       \
    --interactive   \
    --tty           \
    $CONTAINER_NAME \
    /bin/bash
elif [ "$STATUS" = 'exited' ]; then
  echo "$CONTAINER_NAME stopped, restarting container..."
  docker start      \
    --interactive   \
    --attach        \
    $CONTAINER_NAME
else
  echo "$CONTAINER_NAME not found, creating container..."
  docker build . -t "$CONTAINER_NAME:latest"
  LOCAL_WORKSPACE_FOLDER="${LOCAL_WORKSPACE_FOLDER:-$(pwd)}"
  docker run                                                             \
    --name $CONTAINER_NAME                                               \
    --interactive                                                        \
    --tty                                                                \
    --volume '//var/run/docker.sock://var/run/docker.sock'               \
    --volume $SSH_AUTH_SOCK:/ssh-agent                                   \
    --env SSH_AUTH_SOCK=/ssh-agent                                       \
    --env LOCAL_WORKSPACE_FOLDER=$LOCAL_WORKSPACE_FOLDER                 \
    --mount "type=bind,source=$LOCAL_WORKSPACE_FOLDER,target=/workspace" \
    --workdir "/workspace"                                               \
    $ADDITIONAL_DOCKER_ARGS                                              \
    "$CONTAINER_NAME:latest"                                             \
    /bin/bash
fi
